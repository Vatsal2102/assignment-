1743838027
8a0c4faa9771445189035ca844487507-phpdoc%3A0af3e048221bc8e701b46b6237f7cd56-6c386f17a7f87c4ddae4ce6cecd6775e
s:17608:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:39:" phpDocumentor\Reflection\Php\File name";s:14:"displaymap.php";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"6c386f17a7f87c4ddae4ce6cecd6775e";s:39:" phpDocumentor\Reflection\Php\File path";s:24:"Templates/displaymap.php";s:41:" phpDocumentor\Reflection\Php\File source";s:7979:"<?php
/**
 * Twin Cities Web Application - Interactive Map Display Template
 *
 * This script generates an interactive Google Maps view for a specific city,
 * dynamically rendering markers for points of interest with custom styling
 * and interactive info windows.
 *
 * @package TwinCitiesWebApp
 * @subpackage Templates
 * @author: 
 * @version 1.0.0
 *
 *
 * Include Configuration File
 * 
 * Loads essential configuration settings, including API keys and 
 * application-wide parameters.
 *
 * Retrieve Google Maps API Key
 * 
 * Extracts the Google Maps API key from the global configuration 
 * to enable map rendering and interaction.
 * 
 * @var string $googleApiKey Unique API key for Google Maps JavaScript API
 *
 * Validate Map Data Availability
 * 
 * Ensures that required map data has been passed to the script before 
 * attempting to render the map. Provides an error message if data is missing.
 * 
 * @throws RuntimeException If map data is not provided
 *
 * Sanitize City Name for Safe HTML Output
 * 
 * Uses htmlspecialchars() to prevent potential XSS attacks when 
 * displaying the city name in the page title.
 * 
 * @var string $sanitizedCityName Escaped city name for safe HTML rendering
 */
include_once('C:\laragon\www\Twin-cities-web-app\config.php');


$googleApiKey = GOOGLE_API_KEY;

if (!isset($mapData)) {
    /** 
     * Display Error Message 
     * 
     * Outputs a user-friendly error when map data is unavailable
     * and halts further script execution.
     */
    echo "Map data not available.";
    return;
}

$sanitizedCityName = htmlspecialchars($mapData['name']);
?>

<!-- 
Map Header and Instructions 
Provides context and user guidance for the interactive map
-->
<h1>Map of <?php echo $sanitizedCityName; ?></h1>
<p>Click on a marker to view details.</p>

<!-- 
Map Container 
Defines the HTML element where the Google Map will be rendered
-->
<div class="map-container">
    <!-- 
    Dynamic Map Div 
    Uses city-specific ID to support multiple map initializations
    -->
    <div id="map-<?php echo $sanitizedCityName; ?>" class="map"></div>
</div>

<script>
    /**
     * Dynamic Map Initialization Function
     * 
     * Generates a city-specific map initialization function that:
     * - Sets map center coordinates
     * - Applies custom map styling
     * - Creates markers for points of interest
     * - Adds interactive info windows
     * 
     * @function
     * @name initMap[CityName]
     * @global
     * 
     * @description
     * This function is dynamically named based on the city and is called 
     * by the Google Maps JavaScript API after script loading. It provides 
     * a fully interactive map experience with custom markers and info windows.
     */
    function initMap<?php echo $sanitizedCityName; ?>() {
        /** 
         * Debug Logging for Map Initialization
         * 
         * Outputs a console log message to confirm map initialization 
         * and aid in troubleshooting.
         */
        console.log("initMap function called for <?php echo $sanitizedCityName; ?>");

        /**
         * City Center Coordinates
         * 
         * Defines the geographical center point for map initialization,
         * extracted from the passed map data.
         * 
         * @type {Object} City coordinates with latitude and longitude
         */
        const city = { 
            lat: <?php echo $mapData['lat']; ?>, 
            lng: <?php echo $mapData['lng']; ?> 
        };

        /**
         * Custom Map Styling Configuration
         * 
         * Configures map appearance by selectively hiding:
         * - Point of Interest (POI) labels and geometries
         * - Transit labels and geometries
         * 
         * Provides a cleaner, less cluttered map experience.
         * 
         * @type {Array} Array of Google Maps styling rules
         */
        const mapStyles = [
            { featureType: "poi", elementType: "labels", stylers: [{ visibility: "off" }] },
            { featureType: "poi", elementType: "geometry", stylers: [{ visibility: "off" }] },
            { featureType: "transit", elementType: "labels", stylers: [{ visibility: "off" }] },
            { featureType: "transit", elementType: "geometry", stylers: [{ visibility: "off" }] }
        ];

        /**
         * Google Maps Instance Creation
         * 
         * Initializes a new Google Map with:
         * - Specified zoom level
         * - City center coordinates
         * - Custom map styling
         * 
         * @type {google.maps.Map} Interactive map object
         */
        const map = new google.maps.Map(document.getElementById("map-<?php echo $sanitizedCityName; ?>"), {
            zoom: 12,           // Default zoom level
            center: city,        // City center coordinates
            styles: mapStyles    // Custom map styling
        });

        /**
         * Dynamic Marker and Info Window Generation
         * 
         * Iterates through provided markers to:
         * - Create markers for each point of interest
         * - Define custom marker icons
         * - Generate interactive info windows
         * - Add mouseover/mouseout event listeners
         */
        <?php 
        /** 
         * Marker Iteration Loop
         * 
         * Generates unique markers and info windows for each 
         * point of interest in the current city.
         */
        foreach ($mapData['markers'] as $index => $marker): 
        ?>
            /**
             * Marker Position Definition
             * 
             * Sets geographical coordinates for each point of interest
             */
            const markerPosition<?php echo $index; ?> = { 
                lat: <?php echo $marker['lat']; ?>, 
                lng: <?php echo $marker['lng']; ?> 
            };
            
            /**
             * Marker Instance Creation
             * 
             * Generates a map marker with:
             * - Specific geographical position
             * - Custom icon
             * - Hover title
             */
            const markerInstance<?php echo $index; ?> = new google.maps.Marker({
                position: markerPosition<?php echo $index; ?>,
                map: map,
                title: "<?php echo htmlspecialchars($marker['name']); ?>",
                icon: {
                    url: "<?php echo htmlspecialchars($marker['icon']); ?>",
                    scaledSize: new google.maps.Size(40, 40)
                }
            });

            /**
             * Info Window Configuration
             * 
             * Creates an info window with detailed marker information:
             * - Name
             * - Coordinates
             * - Operating hours
             */
            const infoWindow<?php echo $index; ?> = new google.maps.InfoWindow({
                content: `
                <div>
                    <strong><?php echo htmlspecialchars($marker['name']); ?></strong><br>
                    <em>Coordinates:</em> <?php echo $marker['lat']; ?>, <?php echo $marker['lng']; ?><br>
                    <em>Open Time:</em> <?php echo htmlspecialchars($marker['open']); ?><br>
                    <em>Close Time:</em> <?php echo htmlspecialchars($marker['close']); ?>
                </div>
                `
            });

            /**
             * Interactive Marker Event Listeners
             * 
             * Adds dynamic interaction:
             * - Show info window on mouse hover
             * - Hide info window when mouse leaves marker
             */
            markerInstance<?php echo $index; ?>.addListener("mouseover", () => {
                infoWindow<?php echo $index; ?>.open(map, markerInstance<?php echo $index; ?>);
            });

            markerInstance<?php echo $index; ?>.addListener("mouseout", () => {
                infoWindow<?php echo $index; ?>.close();
            });
        <?php endforeach; ?>
    }
</script>
";s:43:" phpDocumentor\Reflection\Php\File docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:62:"Twin Cities Web Application - Interactive Map Display Template";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:177:"This script generates an interactive Google Maps view for a specific city,
dynamically rendering markers for points of interest with custom styling
and interactive info windows.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:7:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:7:"package";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:16:"TwinCitiesWebApp";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:10:"subpackage";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:9:"Templates";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:2;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:7:"author:";s:14:" * description";N;}i:3;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Version":3:{s:7:" * name";s:7:"version";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:254:"Include Configuration File

Loads essential configuration settings, including API keys and
application-wide parameters.

Retrieve Google Maps API Key

Extracts the Google Maps API key from the global configuration
to enable map rendering and interaction.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:55:" phpDocumentor\Reflection\DocBlock\Tags\Version version";s:5:"1.0.0";}i:4;O:43:"phpDocumentor\Reflection\DocBlock\Tags\Var_":4:{s:7:" * name";s:3:"var";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:222:"Unique API key for Google Maps JavaScript API

Validate Map Data Availability

Ensures that required map data has been passed to the script before
attempting to render the map. Provides an error message if data is missing.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:15:" * variableName";s:12:"googleApiKey";}i:5;O:45:"phpDocumentor\Reflection\DocBlock\Tags\Throws":3:{s:7:" * name";s:6:"throws";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:175:"If map data is not provided

Sanitize City Name for Safe HTML Output

Uses htmlspecialchars() to prevent potential XSS attacks when
displaying the city name in the page title.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:17:"\RuntimeException";s:36:" phpDocumentor\Reflection\Fqsen name";s:16:"RuntimeException";}}}i:6;O:43:"phpDocumentor\Reflection\DocBlock\Tags\Var_":4:{s:7:" * name";s:3:"var";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:41:"Escaped city name for safe HTML rendering";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:15:" * variableName";s:17:"sanitizedCityName";}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";